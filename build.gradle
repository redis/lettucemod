config {
    info {
        description = 'LettuceMod'
        inceptionYear = '2020'
        vendor = 'Redis'
        tags = ['redis', 'modules', 'stack', 'java', 'client', 'spring']

        links {
            website      = "https://github.com/redis/${project.rootProject.name}"
            issueTracker = "https://github.com/redis/${project.rootProject.name}/issues"
            scm          = "https://github.com/redis/${project.rootProject.name}.git"
        }

        scm {
            url                 = "https://github.com/redis/${project.rootProject.name}"
            connection          = "scm:git:https://github.com/redis/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis/${project.rootProject.name}.git"
        }

        specification {
            enabled = true
        }

        implementation {
            enabled = true
        }
        
        people {
            clearDomainSet()
            person {
                id    = 'jruaux'
                name  = 'Julien Ruaux'
                roles = ['developer', 'author']
            }
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
    
    licensing {
        enabled = false
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    coverage {
        jacoco {
            enabled = true
            toolVersion = jacocoPluginVersion
        }
    }
    
    testing {
        jar = true
    }
}

allprojects {
    repositories {
        mavenLocal()
        gradlePluginPortal()
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    
    ext['lettuce.version'] = lettuceVersion
}

subprojects {
    config {
        info {
            description = project.project_description
        }
        coverage {
            jacoco {
		        toolVersion = jacocoPluginVersion
            }
        }
    }
    
    license {
        exclude('build/**')
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.platform:junit-platform-launcher'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.awaitility:awaitility'
        testImplementation group: 'com.redis', name: 'testcontainers-redis', version: testcontainersRedisVersion
        testImplementation group: 'com.redis', name: 'testcontainers-redis-enterprise', version: testcontainersRedisVersion
    }

    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
        archiveClassifier = ''
    }

}